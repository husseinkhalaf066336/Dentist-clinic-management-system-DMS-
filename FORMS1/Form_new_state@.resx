<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARkAAAA+CAYAAAAfzm8tAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQWSURBVHhe7du/SxtxGMdx/9guDi5dBDvo0EEKUoQi6NDR
        oWBLh3YquCjUQUVTY360SVFMikb95i5Rc/nxNM8lHkZzjWKepfc+OLDp+YS8+PDxe9/TCeeccGJABsiA
        VQYmrAYzl9CSATKgGaBkWMmxkiUDphmgZAiYacBYzbCaoWQoGUqGDJhmgJIhYKYBYyXDSuafJXN24WT9
        2MlS3pf5Q1+m9315se1xYkAGEp4B7QLthMWsJ9+Oq1LudkXcD5TYkvlecmGpLBeuZOs8kIzXkkqjLRwI
        IICAdoF2ws5lU94Xr8Ku0LIZVjQPSkYbaSXvydtcXVzQQRMBBBAYKVBvdcKyWcj4clQZXNUMlIwWzOyB
        L5uVYORQLkAAAQTuC6SqTXmd9qV4p2gGSkZXMBQMwUEAgecI6G2U7tfc3jpFJaN7MHqLxIEAAgg8V2Dt
        pCGffvf2aMKS0adIunHDHsxzafl+BBBQgaD7jGguXZPcab9kdFdYN204EEAAgXEJfC3fyGrB661k9Fm3
        PoriQAABBMYlcFRvhQ+SwpKZSXlSvuZ3YMaFyxwEEOjdMk3u9lcyU90v9Dk3BwIIIDBOAf0LgXAlo19w
        IIAAAuMWoGTGLco8BBAYEKBkCAQCCJgKUDKmvAxHAAFKhgwggICpACVjystwBBCgZMgAAgiYClAyprwM
        RwABSoYMIICAqQAlY8rLcAQQoGTIAAIImApQMqa8DEcAAUqGDCCAgKkAJWPKy3AEEKBkyAACCJgKUDKm
        vAxHAAFKhgwggICpACVjystwBBCgZMgAAgiYClAyprwMRwABSoYMIICAqQAlY8rLcAQQoGTIAAIImApQ
        Mqa8DEcAAUqGDCCAgKkAJWPKy3AEEKBkyAACCJgKUDKmvAxHAAFKhgwggICpQFQyk7ueBG3T92I4Aggk
        UCAqmel9XyoNWiaBGeAjI2AqEJXMQsaXVLVp+mYMRwCBZAmUr9syk/JkwjknH4tO1k4ayRLg0yKAgKnA
        ZiWQlXy/ZIoVJ69++OzLmJIzHIFkCbz7WZeNk2pvJaPnh2JVPpdukqXAp0UAAROBrfNAlvJ+2C1RyZxd
        OJk/9OVXrWXypgxFAIFkCLigE94ZlbudMlAy+o/cqZO5dE10w4YDAQQQeKqAFsybbF22y9WwYB6UjL6w
        98fJ7IEvX0rXT53P9QggkGCBnctmuIK5WzBDS0Zf1Fun1YIXNpLuEGs7cSCAAAL3Beqtjuj+y3LhShaz
        XnSLdLuKiS2Z2wu0kfQR1Ms9T/SXajgxIANk4G4Gprp/LaAbvOvHvVujYWe08Rt3Aa/H42GDDRkYnQFK
        JqZ9Cc/o8GCE0WMyQMlQMrHL3McEiGsomlEZoGQoGUqGDJhmgJIhYKYBG/VTjv///1dCfwGwMeDttfEy
        IgAAAABJRU5ErkJggg==
</value>
  </data>
</root>