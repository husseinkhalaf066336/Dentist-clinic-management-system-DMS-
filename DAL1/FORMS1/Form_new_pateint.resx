<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOYAAAA4CAYAAADpXoTkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOpSURBVHhe7Z3NS5RRFIf9z1q1adWqTW1q0yZaRCAEgrRo
        0yIKgqQPg5KIJEGhiFDKFBvLdBrzY4QcR6ZscmTCokTixO8O8+ak05Cp9+A8F14omeY9Puc83HPfiTkt
        5XLZuGBADfiqgRYS4ish5IN8qAYQk46BjslhDSCmw6Swa7JrIiZismM6rAHEdJgUdkx2zL+KubxStLFc
        n/Vk2qxr/JR1pI7YxcEDXDCgBrZRA/JHHnWnW210/qEVS4W63UpdMTOLA0HE3ql2my72W748buXvH40F
        AQhsj4D8kUfZ5Rf2aOZC8EuCbtUhbRJTFvdOnrcHb8/a17XS9iLgX0EAAg0J/FhfDYLenzhjHz7P1wha
        I6ak7Hx93DJLjxu+KS+AAAR2hsD7lZTdeXPSFovZRM4aMbVTIuXOwOZdIPAvBNTi6vxZbWsTMXWmVPvK
        ggAE4hAYnO+w53O3gpxBTD191UGUM2WchHBXCIjA+s81uz12wnJLkxUx9WRIh1AWBCAQl8DLfJc9nblS
        EVOfq+gRLgsCEIhL4NPqXHgAG8S8PnrUSt8W4kbE3SEAgdDOXho6WBHz8vAh02cqLAhAID4B/e+6IKb+
        wIIABHwQQEwfeSAKCNQQQEwKAgIOCSCmw6QQEgQQkxqAgEMCiOkwKYQEAcSkBiDgkABiOkwKIUEAMakB
        CDgkgJgOk0JIEEBMagACDgkgpsOkEBIEEJMagIBDAojpMCmEBAHEpAYg4JAAYjpMCiFBADGpAQg4JICY
        DpNCSBBATGoAAg4JIKbDpBASBBCTGoCAQwKI6TAphAQBxKQGIOCQQCKmvmBWXzTLggAE4hNIxNRAIaZF
        x08IEUBABBIxNdFWwzNZEIBAXAIaVaKRJeGb2J9lb5pm87EgAIG4BDQ4WgOkg5gaMX3j1THOmXFzwt0h
        YD2T52wi/6Qipq6B2Ws2nOsEDQQgEInAdLHfejJtvydKV6dKawZ84cu7SGFxWwg0LwFNc1fXWiwVasWU
        nBoxrVHTzMps3gLhN997ApLyXvq0TReGgpS6kla2+oPZQipMtB1ZuLv3EXJHCDQZAU1y1065Ucotxay2
        tZoDL4v1lEhGsyAAgZ0hoCHROk/2TrVbd7o1aV+rm2NdMasvkMV6dHt15HD40JMLBtTA/9eAJrjrIc9Y
        ri9pXTdK2VDMP1/M3yv9PxcMdrsGNp0xd/uGvD9FTQ00rgHEZAekA3BYA4jpMCnsKI13lP3OCDERkx3T
        YQ38At6avX/7x6NBAAAAAElFTkSuQmCC
</value>
  </data>
</root>